name: build-image
on:
  push:
    tags:
      - '*'

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      TAG_PATTERN: "^([0-9]+)\.([0-9]+)-alpine-(.*)$"
    outputs:
      major: ${{ steps.decode.outputs.major }}
      minor: ${{ steps.decode.outputs.minor }}
      alpine-version: ${{ steps.decode.outputs.alpine-version }}
      is-valid: ${{ steps.decode.outputs.is-valid }}
    steps:
      - name: Tag decoding and validation
        id: decode
        run: |
          TAG="${{ github.ref_name }}"
          echo "Tag received: $TAG"
          if [[ $TAG =~ $TAG_PATTERN ]]; then
            echo "major=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "minor=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
            echo "alpine-version=${BASH_REMATCH[3]}" >> $GITHUB_OUTPUT
            echo "is-valid=true" >> $GITHUB_OUTPUT
          else
            echo "is-valid=false" >> $GITHUB_OUTPUT
            echo "::error::Tag '$TAG' does not match the pattern "
            exit 1
          fi

  build-image:
    needs: validate
    if: needs.validate.outputs.is-valid == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set version value
        id: version
        run: |
          echo "Major:    ${{ needs.validate.outputs.major }}"
          echo "Minor:    ${{ needs.validate.outputs.minor }}"
          echo "Alpine:   ${{ needs.validate.outputs.alpine-version }}"
          echo "value=${{ needs.validate.outputs.major }}.${{ needs.validate.outputs.minor }}-alpine-${{ needs.validate.outputs.alpine-version }}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=10485760
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:context"
          build-args: |
            ALPINE_VERSION=${{ needs.validate.outputs.alpine-version }}
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.value }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.repository }}:${{ steps.version.outputs.value }}
